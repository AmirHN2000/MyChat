@page "/ConfirmCodePage/{Email}"
@layout EmptyLayout
@attribute [AllowAnonymous]

@using MyChat.Shared.ViewModels.Users

@inject IUserService UserService
@inject IAuthenticationService AuthenticationService
@inject ISnackbar Snackbar

<MudGrid>
    <MudItem md="3"></MudItem>
    <MudItem xs="12" md="6">
        <MudPaper Class="mt-16 pa-4 border-solid border-1 mud-border-dark" Elevation="3">
            <EditForm EditContext="@editContext" OnValidSubmit="SubmitForm">
                <DataAnnotationsValidator/>
                
                <MudGrid Style="text-align: center">
                    <MudItem xs="12" md="12" Class="pa-4">
                        <MudTextField Label="کد تایید" @bind-Value="@_model.Code" Adornment="Adornment.End"
                                      AutoFocus="true" Counter="6"For="@(() => _model.Code)" 
                                      AdornmentIcon="@Icons.Material.Outlined.Key"
                                      Variant="Variant.Outlined" Immediate="true"/>
                    </MudItem>
                            
                    <MudItem xs="12" md="12">
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" FullWidth="true"
                                   ButtonType="ButtonType.Submit" Disabled="_isLoading">
                            @{
                                if (_isLoading)
                                {
                                    <MudProgressCircular Indeterminate="@_isLoading" Style="color: white"
                                    Size="Size.Small"/>
                                }
                                else
                                {
                                    <MudText>تایید کد</MudText>
                                }
                            }
                               </MudButton>
                    </MudItem>
                </MudGrid>
            </EditForm>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    [CascadingParameter]
    private EmptyLayout EmptyLayout { get; set; }
    
    [Parameter]
    public string Email {get;set;}
    
    private EditContext editContext { get; set; }

    private ConfirmCodeAccountVm _model { get; set; } = new();

    private bool _isLoading = false;
    
    protected override void OnInitialized()
    {
        EmptyLayout.SetName("کد تایید");

        _model.Email = Email;
        editContext = new EditContext(_model);
    }
    
    private async Task SubmitForm()
    {
        _isLoading = true;

        var userInfo = await UserService.ConfirmCode(_model);
        if (userInfo != null && userInfo.UserId > 0 && !string.IsNullOrEmpty(userInfo.Token))
        {
            await AuthenticationService.SignIn(userInfo);
            
            NavigationManager.NavigateTo("CompleteProfile");
        }
        else
        {
            Snackbar.Add("خطا در تایید کد", Severity.Warning);
        }

        _isLoading = false;
    }

}