@page "/CompleteProfile"

@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@layout EmptyLayout

<MudGrid>
    <MudItem md="3"></MudItem>
    <MudItem xs="12" md="6">
        <MudPaper Class="mt-16 pa-4 border-solid border-1 mud-border-dark" Elevation="3">
            @* <EditForm EditContext="@editContext" OnValidSubmit="SubmitForm"> *@
            @*     <DataAnnotationsValidator/> *@
            @*      *@
            @*     <MudGrid Style="text-align: center"> *@
            @*         <MudItem xs="12" md="12" Class="pa-4"> *@
            @*             <MudTextField Label="کد تایید" @bind-Value="@_model.Code" Adornment="Adornment.End" *@
            @*                           AutoFocus="true" Counter="6"For="@(() => _model.Code)"  *@
            @*                           AdornmentIcon="@Icons.Material.Outlined.Key" *@
            @*                           Variant="Variant.Outlined" Immediate="true"/> *@
            @*         </MudItem> *@
            @*                  *@
            @*         <MudItem xs="12" md="12"> *@
            @*             <MudButton Color="Color.Primary" Variant="Variant.Filled" FullWidth="true" *@
            @*                        ButtonType="ButtonType.Submit"> *@
            @*                 @{ *@
            @*                     if (_isLoading) *@
            @*                     { *@
            @*                         <MudProgressCircular Indeterminate="@_isLoading" Style="color: white" *@
            @*                         Size="Size.Small"/> *@
            @*                     } *@
            @*                     else *@
            @*                     { *@
            @*                         <MudText>تایید کد</MudText> *@
            @*                     } *@
            @*                 } *@
            @*                    </MudButton> *@
            @*         </MudItem> *@
            @*     </MudGrid> *@
            @* </EditForm> *@
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    [CascadingParameter]
    private EmptyLayout EmptyLayout { get; set; }
    
    private EditContext editContext { get; set; }

    // private comple _model { get; set; } = new();

    private bool _isLoading = false;
    
    protected override void OnInitialized()
    {
        EmptyLayout.SetName("تکمیل پروفایل");
        
        
        NavigationManager.NavigateTo("");
    // _model.Email = Email;
    // editContext = new EditContext(_model);
    }
    
    private async Task SubmitForm()
    {
        _isLoading = true;

        // var userInfo = await UserService.ConfirmCode(_model);
        // if (userInfo != null)
        // {
        //     await AuthenticationService.SignIn(userInfo);
        //     
        //     NavigationManager.NavigateTo("CompleteProfile");
        // }

        _isLoading = false;
    }
}